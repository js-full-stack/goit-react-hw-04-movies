{"version":3,"sources":["utils/moviesApi.js","Pages/MovieDetailsPage/MovieDetailsPage.jsx"],"names":["API_KEY","axios","defaults","baseURL","URL","fetchPopularMovies","get","then","data","results","handleMovieSearch","query","SearchUrl","handleClickLinkMovie","movieId","MovieUrl","MovieDetailsPage","useState","movieDetails","setMovieDetails","id","useParams","console","log","useEffect","moviesApi","map","title","overview","genres","popularity","release_date","poster_path","className","src","alt","toFixed","name"],"mappings":"yIAAA,qBACMA,EAAU,mCAChBC,IAAMC,SAASC,QAAU,6BACzB,IAAMC,EAAG,wCAAoCJ,GAkB9B,KAAEK,mBAdU,WACzB,OAAOJ,IAAMK,IAAIF,GAAKG,MAAK,qBAAGC,KAAgBC,YAaXC,kBAVX,SAAAC,GACxB,IAAMC,EAAS,kCAA8BZ,EAA9B,kBAA+CW,GAC9D,OAAOV,IAAMK,IAAIM,GAAWL,MAAK,qBAAGC,KAAgBC,YAQEI,qBAL3B,SAAAC,GAC3B,IAAMC,EAAQ,mBAAeD,EAAf,oBAAkCd,GAChD,OAAOC,IAAMK,IAAIS,GAAUR,MAAK,qBAAGC,W,wHCyCtBQ,EAnDU,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACtBC,EADsB,KACRC,EADQ,KAErBC,EAAOC,cAAPD,GASR,OARAE,QAAQC,IAAI,MAAOH,GAEnBI,qBAAU,WACRC,IAAUZ,qBAAqBO,GAAIb,MAAK,SAAAC,GAAI,OAAIW,EAAgB,CAACX,SAChE,IAEHc,QAAQC,IAAIL,GAGV,mCACGA,EAAaQ,KACZ,YAQO,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAC,EAKI,EALJA,OACAT,EAII,EAJJA,GACAU,EAGI,EAHJA,WACAC,EAEI,EAFJA,aACAC,EACI,EADJA,YAGA,OADAV,QAAQC,IAAIS,GAEV,sBAAcC,UAAU,wBAAxB,UACE,6BAAKN,IACL,+CAAkBI,KAClB,0CACA,4BAAIH,IACJ,qBACEM,IAAG,8CAAyCF,GAC5CG,IAAI,KAEN,4CACA,4BAAIL,EAAWM,QAAQ,KACvB,wCACA,6BACGP,EAAOH,KAAI,gBAAGW,EAAH,EAAGA,KAAMjB,EAAT,EAASA,GAAT,OACV,6BAAciB,GAALjB,UAdLA","file":"static/js/MoviesDetailsPage.09327a48.chunk.js","sourcesContent":["import axios from 'axios';\nconst API_KEY = 'a97e0a0a9b37b258134862ba760da91a';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst URL = `/3/trending/movie/day?api_key=${API_KEY}`;\n\n// axios.defaults.headers.common['Authorization'] = `Bearer ${API_KEY}`;\n\nconst fetchPopularMovies = () => {\n  return axios.get(URL).then(({ data }) => data.results);\n};\n\nconst handleMovieSearch = query => {\n  const SearchUrl = `/3/search/movie?api_key=${API_KEY}&query=${query}`;\n  return axios.get(SearchUrl).then(({ data }) => data.results);\n};\n\nconst handleClickLinkMovie = movieId => {\n  const MovieUrl = `/3/movie/${movieId}?api_key=${API_KEY}`;\n  return axios.get(MovieUrl).then(({ data }) => data);\n};\n\nexport default { fetchPopularMovies, handleMovieSearch, handleClickLinkMovie };\n","// import propTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moviesApi from '../../utils/moviesApi';\nimport { v4 as uuidv4 } from 'uuid';\n\n//\n\nconst MovieDetailsPage = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const { id } = useParams();\n  console.log('id:', id);\n\n  useEffect(() => {\n    moviesApi.handleClickLinkMovie(id).then(data => setMovieDetails([data]));\n  }, []);\n\n  console.log(movieDetails);\n\n  return (\n    <>\n      {movieDetails.map(\n        ({\n          title,\n          overview,\n          genres,\n          id,\n          popularity,\n          release_date,\n          poster_path,\n        }) => {\n          console.log(poster_path);\n          return (\n            <div key={id} className=\"MovieDetailsContainer\">\n              <h1>{title}</h1>\n              <p>Release date: {release_date}</p>\n              <h2>Overview</h2>\n              <p>{overview}</p>\n              <img\n                src={`https://image.tmdb.org/t/p/original/${poster_path}`}\n                alt=\"\"\n              />\n              <h2>Popularuty</h2>\n              <p>{popularity.toFixed(1)}</p>\n              <h2>Genres</h2>\n              <ul>\n                {genres.map(({ name, id }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ul>\n            </div>\n          );\n        },\n      )}\n    </>\n  );\n};\n//image.tmdb.org/t/p/w500/kqjL17yufvn9OVLyXYpvtyrFfak.jpg\n\nexport default MovieDetailsPage;\n// overview '', original__title '', release_date '', genres [],\n"],"sourceRoot":""}