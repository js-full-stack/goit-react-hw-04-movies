{"version":3,"sources":["utils/moviesApi.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","images/sprite.svg","Components/SearchForm/SearchForm.jsx","Pages/MoviesPage/MoviesPage.jsx"],"names":["API_KEY","axios","defaults","baseURL","URL","fetchPopularMovies","get","then","data","results","handleMovieSearch","query","SearchUrl","handleClickLinkMovie","movieId","MovieUrl","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","SearchForm","onSubmit","useState","setQuery","location","useLocation","pathname","state","console","log","e","preventDefault","className","type","onChange","target","href","sprite","MoviesPage","filmsList","setFilmsList","search","searchQuery","moviesApi","map","title","id","to"],"mappings":"yIAAA,qBACMA,EAAU,mCAChBC,IAAMC,SAASC,QAAU,6BACzB,IAAMC,EAAG,wCAAoCJ,GAmB9B,KAAEK,mBAfU,WACzB,OAAOJ,IAAMK,IAAIF,GAAKG,MAAK,qBAAGC,KAAgBC,YAcXC,kBAXX,SAAAC,GACxB,IAAMC,EAAS,kCAA8BZ,EAA9B,kBAA+CW,GAC9D,OAAOV,IAAMK,IAAIM,GAAWL,MAAK,qBAAGC,KAAgBC,YASEI,qBAN3B,SAAAC,GAC3B,IAAMC,EAAQ,mBAAeD,EAAf,oBAAkCd,GAChD,OAAOC,IAAMK,IAAIS,GAAUR,MAAK,qBAAGC,W,0KClBtB,SAASQ,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECZM,UAA0B,mC,eCwC1BQ,EApCI,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SAAe,EACTC,mBAAS,IADA,mBAC5BhB,EAD4B,KACrBiB,EADqB,KAE7BC,EAAWC,cAETC,EAAoBF,EAApBE,SAAUC,EAAUH,EAAVG,MAClBC,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GAQZ,OACE,sBAAMN,SAPa,SAAAS,GACnBA,EAAEC,iBACFV,EAASf,GACTiB,EAAS,KAIqBS,UAAU,aAAxC,SACE,wBAAOA,UAAU,cAAjB,UACE,0BACEA,UAAU,cACVC,KAAK,OACLnB,MAAOR,EACP4B,SAdkB,SAAAJ,GAAC,OAAIP,EAASO,EAAEK,OAAOrB,SAU3C,gBAKY,eALZ,kBAMc,gCANd,IAQA,yBAAQkB,UAAU,eAAeC,KAAK,SAAtC,mBAEE,qBAAKD,UAAU,aAAf,SACE,qBAAKI,KAAI,UAAKC,EAAL,6BCgBNC,EAvCI,WAAO,IAAD,EACWhB,mBAAS,IADpB,mBAChBiB,EADgB,KACLC,EADK,OAEMf,cAArBC,EAFe,EAEfA,SAFe,EAELe,OAUlB,OACE,qCACE,6CACA,cAAC,EAAD,CAAYpB,SATK,SAAAqB,GACnBC,IACGtC,kBAAkBqC,GAClBxC,MAAK,SAAAE,GAAO,OAAIoC,EAAapC,SAO7BmC,GACC,6BACGA,EAAUK,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACb,oBAAId,UAAU,YAAd,SACE,cAAC,IAAD,CAAMA,UAAU,aAAae,GAAE,UAAKrB,EAAL,YAAiBoB,GAAhD,SACGD,KAF0BC,QAQrC,cAAC,IAAD","file":"static/js/MoviesPage.db4e932e.chunk.js","sourcesContent":["import axios from 'axios';\nconst API_KEY = 'a97e0a0a9b37b258134862ba760da91a';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst URL = `/3/trending/movie/day?api_key=${API_KEY}`;\n\n// axios.defaults.headers.common['Authorization'] = `Bearer ${API_KEY}`;\n\nconst fetchPopularMovies = () => {\n  return axios.get(URL).then(({ data }) => data.results);\n};\n\nconst handleMovieSearch = query => {\n  const SearchUrl = `/3/search/movie?api_key=${API_KEY}&query=${query}`;\n  return axios.get(SearchUrl).then(({ data }) => data.results);\n};\n\nconst handleClickLinkMovie = movieId => {\n  const MovieUrl = `/3/movie/${movieId}?api_key=${API_KEY}`;\n  return axios.get(MovieUrl).then(({ data }) => data);\n};\n\n// eslint-disable-next-line\nexport default { fetchPopularMovies, handleMovieSearch, handleClickLinkMovie };\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default __webpack_public_path__ + \"static/media/sprite.62cf7aa2.svg\";","import { useState } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport { useLocation } from 'react-router-dom';\nimport './SearchForm.scss';\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const location = useLocation();\n\n  const { pathname, state } = location;\n  console.log(pathname);\n  console.log(state);\n  const handleInputChange = e => setQuery(e.target.value);\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"SearchForm\">\n      <label className=\"SearchLabel\">\n        <input\n          className=\"SearchInput\"\n          type=\"text\"\n          value={query}\n          onChange={handleInputChange}\n          className=\"SearchInput\"\n          placeholder=\"Enter the title of the movie\"\n        />\n        <button className=\"SearchButton\" type=\"submit\">\n          Search\n          <svg className=\"SearchIcon\">\n            <use href={`${sprite}#icon-search`}></use>\n          </svg>\n        </button>\n      </label>\n    </form>\n  );\n};\n\nexport default SearchForm;\n\n//* Пример поиска по Submit с debounce\n\n// import { useState, useEffect, useCallback } from 'react';\n// import moviesApi from '../../utils/moviesApi';\n// import _ from 'lodash';\n\n// const SearchInput = () => {\n//   const [query, setQuery] = useState('');\n//   const [movieList, setMovieList] = useState([]);\n\n//   const handleInputChange = e => setQuery(e.target.value);\n\n//   useEffect(() => {\n//     if (!query) return;\n//   });\n\n//   const movieSearch = useCallback(\n//     _.debounce(\n//       query =>\n//         moviesApi\n//           .handleMovieSearch(query)\n//           .then(results => setMovieList(results)),\n//       300,\n//     ),\n//     [],\n//   );\n\n//   useEffect(() => {\n//     if (!query) return;\n\n//     movieSearch(query);\n//   }, [query, movieSearch]);\n//   useEffect(() => {}, [query]);\n\n//   return (\n//     <>\n//       <label className=\"SearchLabel\">\n//         <input\n//           type=\"text\"\n//           value={query}\n//           onChange={handleInputChange}\n//           className=\"SearchInput\"\n//         />\n//       </label>\n//       {movieList && (\n//         <ul>\n//           {movieList.map(({ title, id }) => (\n//             <li key={id}>{title}</li>\n//           ))}\n//         </ul>\n//       )}\n//     </>\n//   );\n// };\n\n// export default SearchInput;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { Switch } from 'react-router-dom';\n\nimport './MoviesPage.scss';\nimport moviesApi from '../../utils/moviesApi';\nimport SearchForm from '../../Components/SearchForm';\n\nconst MoviesPage = () => {\n  const [filmsList, setFilmsList] = useState([]);\n  const { pathname, search } = useLocation();\n  // console.log('pathname:', pathname);\n  // console.log('search:', search);\n\n  const handleSubmit = searchQuery => {\n    moviesApi\n      .handleMovieSearch(searchQuery)\n      .then(results => setFilmsList(results));\n  };\n\n  return (\n    <>\n      <h2>Movies Page</h2>\n      <SearchForm onSubmit={handleSubmit} />\n      {filmsList && (\n        <ul>\n          {filmsList.map(({ title, id }) => (\n            <li className=\"MovieItem\" key={id}>\n              <Link className=\"MoviesLink\" to={`${pathname}/${id}`}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      <Switch></Switch>\n    </>\n  );\n};\n\nMoviesPage.propTypes = {\n  handleSubmit: PropTypes.func,\n  moviesApi: PropTypes.shape({\n    handleMovieSearch: PropTypes.func,\n  }),\n};\n\nexport default MoviesPage;\n"],"sourceRoot":""}